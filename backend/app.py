import os
from dotenv import load_dotenv
from flask import Flask, request, jsonify
from flask_cors import CORS
import google.generativeai as genai

# Load environment variables
load_dotenv()

# Initialize Flask app
app = Flask(__name__)
CORS(app)

# Configure Gemini API
GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

def to_gemini(prompt):
    # Gemini model
    model = genai.GenerativeModel('gemini-pro')

    # Pass prompt to model
    response = model.generate_content(prompt)
    
    return response

@app.route('/api/save-data', methods=['POST'])
def save_data():
    data = request.get_json()
    
    # Use Gemini API to process the data
    prompt = f"Analyze the following cyber security data and only provide a risk score from 1 to 100: {data}"
    response = to_gemini(prompt)
    
    # Extract the risk score from the response
    risk_score = int(response.text.strip())
    
    return jsonify({'message': 'Data received', 'risk_score': risk_score}), 200

if __name__ == '__main__':
    app.run(port=5001, debug=True)
